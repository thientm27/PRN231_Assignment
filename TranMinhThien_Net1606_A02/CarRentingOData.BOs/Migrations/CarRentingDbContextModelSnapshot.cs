// <auto-generated />
using System;
using CarRentingOData.BOs;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRentingOData.BOs.Migrations
{
    [DbContext(typeof(CarRentingDbContext))]
    partial class CarRentingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarRentingOData.BOs.Car", b =>
                {
                    b.Property<int>("CarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarID"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("CarModelYear")
                        .HasColumnType("int");

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProducerID")
                        .HasColumnType("int");

                    b.Property<decimal>("RentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarID");

                    b.HasIndex("ProducerID");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarID = 1,
                            Capacity = 4,
                            CarModelYear = 2022,
                            CarName = "Car1",
                            Color = "Red",
                            Description = "Description for Car1",
                            ImportDate = new DateTime(2023, 10, 6, 20, 46, 23, 612, DateTimeKind.Local).AddTicks(2006),
                            ProducerID = 1,
                            RentPrice = 50m,
                            Status = "Available"
                        },
                        new
                        {
                            CarID = 2,
                            Capacity = 5,
                            CarModelYear = 2023,
                            CarName = "Car2",
                            Color = "Blue",
                            Description = "Description for Car2",
                            ImportDate = new DateTime(2023, 10, 6, 20, 46, 23, 612, DateTimeKind.Local).AddTicks(2019),
                            ProducerID = 2,
                            RentPrice = 60m,
                            Status = "Available"
                        });
                });

            modelBuilder.Entity("CarRentingOData.BOs.CarProducer", b =>
                {
                    b.Property<int>("ProducerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProducerID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProducerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProducerID");

                    b.ToTable("CarProducers");

                    b.HasData(
                        new
                        {
                            ProducerID = 1,
                            Address = "Address1",
                            Country = "Country1",
                            ProducerName = "Producer1"
                        },
                        new
                        {
                            ProducerID = 2,
                            Address = "Address2",
                            Country = "Country2",
                            ProducerName = "Producer2"
                        });
                });

            modelBuilder.Entity("CarRentingOData.BOs.CarRental", b =>
                {
                    b.Property<int>("CustomerID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("CarID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("PickupDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(2);

                    b.Property<decimal>("RentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID", "CarID", "PickupDate");

                    b.HasIndex("CarID");

                    b.ToTable("CarRentals");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            CarID = 1,
                            PickupDate = new DateTime(2023, 10, 6, 20, 46, 23, 612, DateTimeKind.Local).AddTicks(2060),
                            RentPrice = 100m,
                            ReturnDate = new DateTime(2023, 10, 9, 20, 46, 23, 612, DateTimeKind.Local).AddTicks(2061),
                            Status = "Completed"
                        },
                        new
                        {
                            CustomerID = 2,
                            CarID = 2,
                            PickupDate = new DateTime(2023, 10, 11, 20, 46, 23, 612, DateTimeKind.Local).AddTicks(2066),
                            RentPrice = 120m,
                            ReturnDate = new DateTime(2023, 10, 16, 20, 46, 23, 612, DateTimeKind.Local).AddTicks(2067),
                            Status = "Pending"
                        });
                });

            modelBuilder.Entity("CarRentingOData.BOs.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"), 1L, 1);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LicenceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            Birthday = new DateTime(1985, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "John Doe",
                            Email = "john.doe@example.com",
                            IdentityCard = "123456789",
                            LicenceDate = new DateTime(2005, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenceNumber = "ABC123",
                            Mobile = "1234567890",
                            Password = "1"
                        },
                        new
                        {
                            CustomerID = 2,
                            Birthday = new DateTime(1990, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Jane Smith",
                            Email = "jane.smith@example.com",
                            IdentityCard = "987654321",
                            LicenceDate = new DateTime(2008, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenceNumber = "XYZ789",
                            Mobile = "9876543210",
                            Password = "1"
                        });
                });

            modelBuilder.Entity("CarRentingOData.BOs.Review", b =>
                {
                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("CarID")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReviewStar")
                        .HasColumnType("int");

                    b.HasKey("CustomerID", "CarID");

                    b.HasIndex("CarID");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            CarID = 1,
                            Comment = "Good experience with this car.",
                            ReviewStar = 4
                        },
                        new
                        {
                            CustomerID = 2,
                            CarID = 2,
                            Comment = "Excellent car! Highly recommended.",
                            ReviewStar = 5
                        });
                });

            modelBuilder.Entity("CarRentingOData.BOs.Car", b =>
                {
                    b.HasOne("CarRentingOData.BOs.CarProducer", "CarProducer")
                        .WithMany("Cars")
                        .HasForeignKey("ProducerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarProducer");
                });

            modelBuilder.Entity("CarRentingOData.BOs.CarRental", b =>
                {
                    b.HasOne("CarRentingOData.BOs.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRentingOData.BOs.Customer", "Customer")
                        .WithMany("CarRentals")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CarRentingOData.BOs.Review", b =>
                {
                    b.HasOne("CarRentingOData.BOs.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRentingOData.BOs.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CarRentingOData.BOs.CarProducer", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("CarRentingOData.BOs.Customer", b =>
                {
                    b.Navigation("CarRentals");
                });
#pragma warning restore 612, 618
        }
    }
}
